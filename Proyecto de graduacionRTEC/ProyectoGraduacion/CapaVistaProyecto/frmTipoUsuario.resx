<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4uLiwwLS1PMC0tTy4u
        LiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALywsUjAtLdwwLS3/MC0t/zAt
        Lf8wLS3/MC0t2zAtLVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy0tfDAtLf8wLS3/MC0tmjEu
        Lq0vLCysMC0tmjAtLf8wLS3+MCwseQAAAAAAAAAAAAAAAAAAAAAAAAAALywsUjAtLf8wLS3/MC0t/zAt
        LWYxLCxtLy0tbDAtLWYwLS3/MC0t/zAtLf4wLS1PAAAAAAAAAAAAAAAAAAAAATAtLd0wLS3/MC0t/zAt
        Lf8wLS1mMS4uVDEuLlMwLS1mMC0t/zAtLf8wLS3/MCws2gAAAAEAAAAAAAAAADEsLDQwLS3/MC0t/zAt
        Lf8wLS3/MC0tZjYoKBMrKysSMC0tZjAtLf8wLS3/MC0t/zAtLf8vLy8xAAAAAAAAAAAwLS1aMC0t/zAt
        Lf8wLS3/MC0t/zAtLWYAAAAAAAAAADAtLWYwLS3/MC0t/zAtLf8wLS3/MS4uWQAAAAAAAAAAMS4uWTAt
        Lf8wLS3wMC0tmi8uLpcuLi4hAAAAAAAAAAAtLS0iLy4ulzAtLZowLS3xMC0t/zEuLlgAAAAAAAAAADEs
        LDQwLS3/MC0t6C8sLFwwLS1VMC0tVTAtLVUwLS1VMC0tVTAtLVUvLCxcMC0t6TAtLf8vLy8xAAAAAAAA
        AAAAAAABMC0t3TAtLf8wLS3/MC0t/zAtLf8vLS3XMC0t2DAtLf8wLS3/MC0t/zAtLf8wLCzaAAAAAQAA
        AAAAAAAAAAAAAC8sLFIwLS3/MC0t/zAtLf8wLS35OTk5CTMzMwowLS36MC0t/zAtLf8wLS3+MC0tTwAA
        AAAAAAAAAAAAAAAAAAAAAAAALy0tfDAtLf8wLS3/MC0t/zAtLWUvLS1nMC0t/zAtLf8wLS3+MCwseQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLCxSMC0t3TAtLf8wLS3/MC0t/zAtLf8wLS3bMC0tUAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwLCw6MC0tVTAtLVUxLS05AAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+B8AAPAPAADjxwAAw8MAAMPDAADDwwAAw8MAAM/z
        AADAAwAA4YcAAPGPAAD4HwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVVVUDMS4uQzAtLY4wLS2uMC0txjAtLcYwLS2uMS0tjS4uLkJVVVUDAAAAAAAA
        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
        wH/+AYD//4AB///AA///+B//////////////////
</value>
  </data>
</root>